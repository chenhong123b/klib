{"name":"Klib","tagline":"Sqlite orm 、HttpClient、imageView/Bitmap Cache 、Gson for android","body":"KLIB for Android\r\n====\r\n\r\n数据、网络请求、图片处理\r\n\r\n\t\t\t\t.android-async-http-1.4.3.jar\r\n\t\t\t\t.sqlite-simple-2.4.jar\r\n\t\t\t\t.universal-image-loader-1.8.4.jar\r\n\t\t\t\t.gson-2.2.4.jar\r\n\t\t\t\t.android-support-v4.jar\r\n\r\n====\r\n\r\n<h3>KDbClient:</h3>\r\n\r\n一.extends KApp,实现creatDbTables():\r\n\r\n\tpublic class MyApp extends KApp {\r\n\t\r\n\t\t@Override\r\n\t\tprotected void creatDbTables() {\r\n\t\t \r\n\t\t\tSQLiteSimple databaseSimple = new SQLiteSimple(this); \r\n\t\t\t    \r\n\t\t\t    //or\r\n\t\t\t    //new SQLiteSimple(context, DatabaseName);\r\n\t\t\t    //new SQLiteSimple(context, DataVersion);\r\n\t\t\t    \r\n\t\t\tdatabaseSimple.create(Record.class);\r\n\t\r\n\t\t}\r\n\t}\r\n\r\n   修改AndroidManifest.xml application节点为自己的类(for example: android:name=\"com.kooxiv.example.MyApp\").\r\n\r\n二.修改Model:\r\n\t\r\n\tpublic class Record {\r\n\t\tpublic transient static final String COLUMN_RECORD_TEXT = \"text\";\r\n\t\tpublic transient static final String COLUMN_ID = \"_id\";\r\n\t\r\n\t\t@Column(name = COLUMN_ID, type = ColumnType.INTEGER, isPrimaryKey = true, isAutoincrement = true)\r\n\t\tpublic int id;\r\n\t\r\n\t\t//@SerializedName(\"text\")\r\n\t\t@Column\r\n\t\tpublic String text;\r\n\t\r\n\t\t//@SerializedName(\"number\")\r\n\t\t@Column\r\n\t\tpublic int number;\r\n\t\t\r\n\t\t//@SerializedName is for Gson\r\n\t}\r\n\t\r\n三.使用:\r\n\r\n\tKDbClient<Record> dbClient = new KDbClient<Record>(this, Record.class);\r\n\r\n\t//增************************************\r\n\t\tRecord record = new Record();\r\n\t\trecord.text = \"record\";\r\n\t\t//可重复添加记录\r\n\t\tdbClient.create(record);\r\n\t\t\r\n\t\t//检查Record.COLUMN_RECORD_TEXT这列是否存在record.text这个值,有则不添加记录\r\n\t\tdbClient.createIfNotExist(record, Record.COLUMN_RECORD_TEXT, record.text);\r\n\t\t\r\n\t\t//dbClient.createIfNotExist(object, COLUMN_NAME1, COLUMN_VALUE1,COLUMN_NAME2, COLUMN_VALUE2);\r\n\t\t...........\r\n\t\r\n\t//查**************\r\n\t\tList<Record> list = dbClient.readAllDesc();\r\n\t\tdbClient.read(id);\r\n\t\tdbClient.readWhere(columnName, columnValue);\r\n\t\t.......\r\n\t\r\n\t//删*****************\r\n\t\tdbClient.deleteAll();\r\n\t\tdbClient.deleteWhere(columnName, columnValue);\r\n\t\t..............\r\n\t\r\n\t//改*************\r\n\t\tdbClient.update(id, newObject);\r\n\t\tdbClient.update(columnName, columnValue, newObject);\r\n\t\t..........\r\n\t\r\n\t\r\n\t\r\n====\r\n\r\n<h3>KHttpClient</h3>\r\n\r\n\r\n\t\t\t\tParams params = new Params();\r\n\t\t\r\n\t\t\t\t// params.put(KEY, Value)\r\n\t\t\t\tparams.put(\"username\", \"111@gmail.com\");\r\n\t\t\t\tparams.put(\"password\", \"123456\");\r\n\t\t\r\n\t\t\t\t// GET\r\n\t\t\t\tKHttpClient<Record> httpClient = new KHttpClient<Record>(this,\r\n\t\t\t\t\t\tRecord.class) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tprotected void onSuccess(int statusCode, Record entity) {\r\n\t\t\r\n\t\t\t\t\t\tif (statusCode == 200) {\r\n\t\t\t\t\t\t\t// ...........\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsuper.onSuccess(statusCode, entity);\r\n\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\r\n\t\t\t\t// httpClient.setTimeout(20*1000);\r\n\t\t\t\t//httpClient.setUserAgent(\"android httpclient\");\r\n\t\t\t\t\r\n\t\t\t\thttpClient.get(\"http://www.www.com\", params);\r\n\t\t\r\n\t\t\t\t// POST\r\n\t\t\t\t\r\n\t\t\t\tparams.put(\"file\", new File(\"path\"));\r\n\t\t\t\tparams.put(\"inputstream\",\r\n\t\t\t\t\t\tgetResources().openRawResource(R.raw.uploadfile));\r\n\t\t\t\thttpClient.post(\"http://www.www.com\", params);\r\n\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n...\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}